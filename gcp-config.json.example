{
    "type": "service_account",
    "project_id": "your-project-id",
    "private_key_id": "your-private-key-id",
    "private_key": "-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----\n",
    "client_email": "your-service-account@your-project-id.iam.gserviceaccount.com",
    "client_id": "your-client-id",
    "auth_uri": "https://accounts.google.com/o/oauth2/auth",
    "token_uri": "https://oauth2.googleapis.com/token",
    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
    "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project-id.iam.gserviceaccount.com",
    "universe_domain": "googleapis.com"
}

//   PROJECT_ID=your-project-id
//   REGION=your-region
//   SERVICE=your-service-name
//   REPO=your-repo-name
  
//   gcloud config set project $PROJECT_ID
//   gcloud config set run/region $REGION
//   gcloud config set run/platform managed


//   gcloud artifacts repositories create your-repo-name \
//   --repository-format=docker \
//   --location=your-region \
//   --description="Docker repo for your app"

//   REPO=your-repo-name
//   IMAGE=$REGION-docker.pkg.dev/$PROJECT_ID/$REPO/$SERVICE:$(date +%Y%m%d-%H%M%S)


// gcloud builds submit --tag $IMAGE .




// IMAGE=$REGION-docker.pkg.dev/$PROJECT_ID/$REPO/$SERVICE:v1.0.0

// # Build & push using Cloud Build (uses your Dockerfile)
// gcloud builds submit --tag $IMAGE .



// IMAGE=$REGION-docker.pkg.dev/$PROJECT_ID/$REPO/$SERVICE:v1.0.0

// # Build image with Docker
// docker build -t $IMAGE .
